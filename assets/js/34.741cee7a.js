(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{380:function(e,t,i){"use strict";i.r(t);var n=i(14),u=Object(n.a)({},(function(){var e=this._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[this._v("const leaveNum = Number(new Big(100).minus(this.percentSum)) // 剩余数值\nconst average = Number((leaveNum / targetNullBudget.length).toFixed(2)) // 平均值\nconst sum = Number(new Big(average).times(targetNullBudget.length))\nif (sum !== leaveNum) {\n    const difference = Number(new Big(leaveNum).minus(sum)) // 差值\n    this.settingTableData.map(item => {\n    if (item.time === targetNullBudget[0].time) {\n        item.budgetRatio = Number(new Big(average).plus(difference))\n        item.budget = Number(\n        new Big(item.budgetRatio).div(100).times(Number(this.queryInfos.budget))\n        ).toFixed(2)\n    }\n    if (!item.budgetRatio) {\n        item.budgetRatio = average\n        item.budget = Number(\n        new Big(item.budgetRatio).div(100).times(Number(this.queryInfos.budget))\n        ).toFixed(2)\n    }\n    return item\n    })\n} else {\n    this.settingTableData.map(item => {\n    if (!item.budgetRatio) {\n        item.budgetRatio = average\n        item.budget = Number(\n        new Big(item.budgetRatio).div(100).times(Number(this.queryInfos.budget))\n        ).toFixed(2)\n    }\n    return item\n    })\n}\nthis.isRatioRight()")])])])])}),[],!1,null,null,null);t.default=u.exports}}]);